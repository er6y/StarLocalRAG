plugins {
    id 'com.android.application'
}

android {
    namespace = 'com.example.starlocalrag'
    compileSdk = 34 // Use an appropriate SDK version
    
    // 添加NDK配置
    ndkVersion = "27.0.12077973" // 使用用户指定的NDK版本

    signingConfigs {
        release {
            storeFile file('../key.jks')
            keyAlias 'key0'
            // 直接获取密码，如果没有提供则使用空字符串（会在实际使用时报错）
            def keyPwd = project.findProperty('KEYPSWD') ?: System.getenv('KEYPSWD') ?: ''
            storePassword keyPwd
            keyPassword keyPwd
        }
    }
    


    defaultConfig {
        applicationId "com.example.starlocalrag"
        minSdk = 26 // Adjust based on required features and device support
        targetSdk = 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // 生成编译时间戳 - 在配置阶段生成，确保与APK文件名一致
        def buildTimeStr = new Date().format('yyyyMMddHHmmss')
        buildConfigField "String", "BUILD_VERSION", "\"${buildTimeStr}\""
        // 将时间戳存储为项目属性，供后续任务使用
        project.ext.buildTimeStamp = buildTimeStr
    }

    buildTypes {
        release {
            // 开源项目配置：启用代码压缩和资源压缩，但不混淆
            minifyEnabled true

            // 使用不混淆的ProGuard配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            // 保持JIT编译器开启以获得更好的性能
            
            // 添加性能优化标志
            buildConfigField "boolean", "ENABLE_GPU_ACCELERATION", "true"
            buildConfigField "boolean", "ENABLE_NNAPI", "true"
            buildConfigField "int", "THREAD_COUNT", "4"
            signingConfig signingConfigs.release // 使用release签名配置
            
            // 启用资源优化
            crunchPngs true
        }
        debug {
            minifyEnabled false
            buildConfigField "boolean", "ENABLE_GPU_ACCELERATION", "true"
            buildConfigField "boolean", "ENABLE_NNAPI", "true"
            buildConfigField "int", "THREAD_COUNT", "2"  // Debug模式使用较少线程
            // 若未提供 KEYPSWD，则使用默认 debug keystore，避免签名失败
            if (project.hasProperty('KEYPSWD') || System.getenv('KEYPSWD')) {
                signingConfig signingConfigs.release // 仅在提供了密码时沿用 release 签名
            } else {
                println "[app] Debug 构建未提供 KEYPSWD，使用默认 debug keystore"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    // 添加编译选项以显示详细错误信息
    tasks.withType(JavaCompile) {
        options.compilerArgs += ["-Xlint:all", "-Xmaxerrs", "1000"]
        options.encoding = "UTF-8"
    }
    
    // dexOptions is obsolete and removed in Android Gradle Plugin 8.0+
    // Dexing is now optimized automatically by the Android Gradle Plugin
    
    // 添加性能优化配置
    packagingOptions {
        // 启用资源压缩
        // 配置原生库提取
        jniLibs {
            useLegacyPackaging = true
            keepDebugSymbols += ['*/arm64-v8a/*.so', '*/armeabi-v7a/*.so']
        }
    }
    

    // If using Kotlin
    // kotlinOptions {
    //     jvmTarget = '1.8'
    // }
    buildFeatures {
        viewBinding = true // Enable View Binding for easier UI access
        buildConfig = true // Enable BuildConfig for custom fields
    }
    
    lint {
        abortOnError = false
        checkReleaseBuilds = false
        baseline = file("lint-baseline.xml")
    }
    
    packaging {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module']
            // 添加排除规则，解决netty依赖冲突
            excludes += ['META-INF/io.netty.versions.properties']
            pickFirsts += ['META-INF/INDEX.LIST', 'META-INF/io.netty.versions.properties']
        }
    }
}

dependencies {

    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.emoji2:emoji2:1.4.0'
    implementation 'androidx.emoji2:emoji2-views:1.4.0'
    implementation 'androidx.emoji2:emoji2-views-helper:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.5'
    implementation 'androidx.navigation:navigation-ui:2.7.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    
    // AndroidX Lifecycle 相关依赖 - 修复ProcessLifecycleInitializer找不到的问题
    implementation 'androidx.lifecycle:lifecycle-runtime:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-process:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-common:2.6.2'
    
    // AndroidX ProfileInstaller 相关依赖 - 修复ProfileInstallerInitializer找不到的问题
    implementation 'androidx.profileinstaller:profileinstaller:1.3.1'
    
    implementation 'org.json:json:20230618'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // 网络请求 - 使用 OkHttp 和 Volley
    
    // Markwon - Markdown渲染库
    implementation 'io.noties.markwon:core:4.6.2'
    implementation 'io.noties.markwon:html:4.6.2'
    implementation 'io.noties.markwon:linkify:4.6.2'
    implementation 'io.noties.markwon:ext-tables:4.6.2'
    implementation 'io.noties.markwon:ext-tasklist:4.6.2'
    implementation 'io.noties.markwon:ext-strikethrough:4.6.2'
    implementation 'io.noties.markwon:image:4.6.2'
    implementation 'io.noties.markwon:syntax-highlight:4.6.2'
    implementation 'io.noties.markwon:ext-latex:4.6.2'
    // PyTorch Mobile
    implementation 'org.pytorch:pytorch_android:1.13.1'
    implementation 'org.pytorch:pytorch_android_torchvision:1.13.1'
    
    // ONNX Runtime - 使用当前可用的最新版本
    implementation 'com.microsoft.onnxruntime:onnxruntime-android:1.22.0'
    // 添加ONNX Runtime扩展（使用可用的最新版本0.13.0）
    implementation 'com.microsoft.onnxruntime:onnxruntime-extensions-android:0.13.0'
    
    // ONNX Runtime GenAI 0.8.1 (本地AAR文件)
    //implementation files('libs/onnxruntime-genai-android-0.8.1.aar')
    // Tokenizers JNI - 现在作为Android库模块
    implementation project(':libs:tokenizers-jni')
    
    // LlamaCpp JNI - 使用项目依赖方式
    implementation project(':libs:llamacpp-jni')
    // 如果需要使用AAR文件，请确保文件存在并取消注释下面一行
    //implementation files('../libs/llamacpp-jni/build/outputs/aar/llamacpp-jni-release.aar')
    
    // 文档解析库
    implementation 'org.apache.tika:tika-core:2.7.0'
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'com.itextpdf:itext-pdfa:5.5.13.3'
    
    // 添加Apache POI库用于Office文档解析
    implementation('org.apache.poi:poi:5.2.3') {
        exclude group: 'xml-apis', module: 'xml-apis'
    }
    implementation('org.apache.poi:poi-ooxml:5.2.3') {
        exclude group: 'xml-apis', module: 'xml-apis'
    }
    implementation 'org.apache.poi:poi-scratchpad:5.2.3'  // Contains HWPF and HSLF (for .doc and .ppt)
    
    // 添加XML处理相关库，解决javax.xml.stream.XMLResolver缺失问题
    implementation 'javax.xml.stream:stax-api:1.0-2'
    implementation 'com.fasterxml:aalto-xml:1.3.2'
    implementation 'com.fasterxml.woodstox:woodstox-core:6.5.0'
    
    // 添加LangChain4j依赖
    implementation 'dev.langchain4j:langchain4j:0.24.0'
    implementation 'dev.langchain4j:langchain4j-core:0.24.0'
    
    // 强制使用统一版本的BouncyCastle库
    implementation 'org.bouncycastle:bcprov-jdk18on:1.72'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.72'
    implementation 'org.bouncycastle:bcutil-jdk18on:1.72'
    
    // JSoup - HTML解析
    implementation 'org.jsoup:jsoup:1.16.1'
    
    // JSON解析
    implementation 'org.json:json:20230618'
    
    // Force consistent Kotlin version
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.20"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:1.8.20"
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    configurations.all {
        resolutionStrategy {
            // 强制使用特定版本的依赖，避免冲突
            force 'org.jetbrains:annotations:13.0'
            // 排除冲突的依赖
            exclude group: 'org.jetbrains', module: 'annotations-java5'
            
            // Force Kotlin versions
            force "org.jetbrains.kotlin:kotlin-stdlib:1.8.20"
            force "org.jetbrains.kotlin:kotlin-stdlib-common:1.8.20"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.20"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.20"
            
            // Force BouncyCastle versions (from previous fix)
            force "org.bouncycastle:bcprov-jdk18on:1.72"
            force "org.bouncycastle:bcpkix-jdk18on:1.72"
            force "org.bouncycastle:bcutil-jdk18on:1.72"
            force "org.bouncycastle:bcmail-jdk18on:1.72"
        }
        
        // Exclude older Kotlin dependencies
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk8"
        
        // Exclude conflicting Apache Commons Logging
        exclude group: "commons-logging", module: "commons-logging"
        
        // Exclude individual Tika modules that conflict with the standard package
        exclude group: "org.apache.tika", module: "tika-parser-mail-module"
        exclude group: "org.apache.tika", module: "tika-parser-mail-commons"
        exclude group: "org.apache.tika", module: "tika-parser-ocr-module"
        exclude group: "org.apache.tika", module: "tika-parser-pdf-module"
        exclude group: "org.apache.tika", module: "tika-parser-pkg-module"
        exclude group: "org.apache.tika", module: "tika-parser-xml-module"
        exclude group: "org.apache.tika", module: "tika-parser-xmp-commons"
        exclude group: "org.apache.tika", module: "tika-parser-webarchive-module"
    }
}

// 确保在构建app之前先复制Rust库
preBuild.dependsOn ':libs:tokenizers-jni:copyRustLibrariesArm64', ':libs:tokenizers-jni:copyRustLibrariesArm7', ':libs:tokenizers-jni:copyRustLibrariesX86', ':libs:tokenizers-jni:copyRustLibrariesX86_64'

// 集成APK复制到构建流程中
afterEvaluate {
    // 为assembleRelease任务添加APK复制
    tasks.named('assembleRelease').configure {
        doLast {
            // 使用配置阶段生成的时间戳，确保与BUILD_VERSION一致
            def buildTime = project.ext.buildTimeStamp
            def releaseApk = file('build/outputs/apk/release/app-release.apk')
            if (releaseApk.exists()) {
                def targetName = "StarLocalRAG_release_${buildTime}.apk"
                copy {
                    from releaseApk
                    into project.rootDir
                    rename { targetName }
                }
                println "Release APK copied to: ${project.rootDir}/${targetName}"
            }
        }
    }
    
    // 为assembleDebug任务添加APK复制
    tasks.named('assembleDebug').configure {
        doLast {
            // 与release对齐，使用配置阶段生成的同一时间戳
            def buildTime = project.ext.buildTimeStamp
            def debugApk = file('build/outputs/apk/debug/app-debug.apk')
            if (debugApk.exists()) {
                def targetName = "StarLocalRAG_debug_${buildTime}.apk"
                copy {
                    from debugApk
                    into project.rootDir
                    rename { targetName }
                }
                println "Debug APK copied to: ${project.rootDir}/${targetName}"
            }
        }
    }
}